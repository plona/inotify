#!/bin/bash - 
#===============================================================================
#
#          FILE: indp_rsync
# 
#         USAGE: ./indp_rsync 
# 
#   DESCRIPTION: w pierwszym przebiegu wykonuje rsync bez rekursji (tylko pliki,
#                linki symboliczne i tworzenie pustych katalogów w dest dir).
#                Następnie forkuje tyle razy, ile jest katalogów w source dir i
#                wykonuje rsync z rekusją w każdym katalogu w source dir.
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Marek Płonka (marekpl), marek.plonka@nask.pl
#  ORGANIZATION: NASK
#       CREATED: 31.12.2016 19:01:38
#      REVISION:  ---
#===============================================================================
#===============================================================================
#  GLOBAL DECLARATIONS
#===============================================================================
set -o nounset                              # Treat unset variables as an error
#set -o xtrace
set -o errexit
ERR_FUNC=2
ERR_SCRIPT=1
#PF='012d'                                       # printf format string
#===============================================================================
#  FUNCTION DEFINITIONS
#===============================================================================
#---  FUNCTION  ----------------------------------------------------------------
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#-------------------------------------------------------------------------------
function usage ()
{
	cat <<- EOT

  Usage :  ${0##/*/} [options] [--]

  Options: 
  -h|help       Display this message
  -s            source dir
  -d            dest dir
  -e            exclude list
  -n            no delete in dest
	EOT
}    # ----------  end of function usage  ----------

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  mycd
#   DESCRIPTION:  
#    PARAMETERS:  
#       RETURNS:  
#-------------------------------------------------------------------------------
mycd ()
{
    cd "$1" || {
        echo "Błąd cd $1"
        exit $ERR_FUNC
    }
}    # ----------  end of function mycd  ----------
#===============================================================================
#  MAIN SCRIPT
#===============================================================================
#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------
rsync_first_opts=" --verbose --progress --update --links --perms --owner --group --times --dirs"
rsync_opts=" --verbose --progress --archive --update"
exclude_list="none"
no_delete=false
while getopts ":s:d:e:nh" opt
do
  case $opt in
    h|help )  usage; exit 0   ;;
    s ) sdir=${OPTARG} ;;
    d ) ddir=${OPTARG} ;;
    e ) exclude_list=${OPTARG} ;;
    n ) no_delete=true ;;
    \? )  echo -e "\n  Option does not exist : $OPTARG\n"
          usage; exit $ERR_SCRIPT   ;;
  esac
done
shift $(($OPTIND-1))

echo "sdir = $sdir"
echo "ddir = $ddir"
echo "exclude_list = $exclude_list"
echo "no_delete = $no_delete"

[[ $no_delete == false ]] && {
    rsync_opts+=" --delete --force"
    rsync_first_opts+=" --delete --force"
}
[[ "$exclude_list" != "none" ]] && rsync_first_opts+=" --exclude-from='$exclude_list'"
echo
echo "rsync_opts = $rsync_opts"
echo
[[ ! -d "$ddir" ]] && { echo "Brak $ddir"; exit $ERR_SCRIPT; }

# pierwszy przebieg (katalog startowy)
mycd "$sdir"
cmd="rsync $rsync_first_opts . \"$ddir\""
echo '########################################'
pwd
echo $cmd
echo '########################################'
echo
eval "$cmd"

# forki
find . -maxdepth 1 -type d | grep -v '^\.$' | \
while read dirname; do
    rsync_cur_opts="$rsync_opts"
    pushd "$dirname" > /dev/null
        ext=$(basename $(pwd))
        cur_ddir="$ddir/$ext"
        [[ "$exclude_list" != "none" ]] && {
            [[ -r "$exclude_list.$ext" ]] && rsync_cur_opts+=" --exclude-from=\"$exclude_list.$ext\""
        }
        cmd="rsync $rsync_cur_opts . \"$cur_ddir\""
        #tmux_run="tmux new-session -d '""$cmd"";while true; do true; done'"
        tmux_run="tmux new-session -d '""$cmd""'"
        echo '########################################'
        pwd
        echo $tmux_run
        eval "$tmux_run"
    popd > /dev/null
done

echo '########################################'

exit 0
